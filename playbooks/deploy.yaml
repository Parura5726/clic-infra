- name: Deploy all services
  hosts: localhost
  connection: local
  become_user: root
  become_method: ansible.builtin.sudo
  become: true
  tasks:
    - name: Check extra variables
      ansible.builtin.fail:
        msg: "{{ item }} must be present and non-empty"
      loop:
        - MATTERMOST_DATABASE_PASSWORD
        - MATTERMOST_DATABASE_INIT
        - NEXTCLOUD_DATABASE_PASSWORD
        - NEXTCLOUD_DATABASE_INIT
        - VAULTWARDEN_ADMIN_TOKEN
        - WIKI_DATABASE_PASSWORD
        - WIKI_DATABASE_INIT
        - WIKI_SECRET_KEY
        - ROBOCLIC_TOKEN
        - ROBOCLIC_ADMIN_TOKEN
        - ROBOCLIC_DIRECTUS_TOKEN
        - CLICKETING_DATABASE_PASSWORD
        - CLICKETING_DATABASE_INIT
        - CLICKETING_ADMIN_TOKEN
        - BOOKSTACK_DATABASE_PASSWORD
        - BOOKSTACK_DATABASE_INIT
        - SMTP_COMMUNICATION_PASSWORD
        - SMTP_IT_PASSWORD
        - ONLYOFFICE_JWT_SECRET
        - BACKUP_ENCRYPTION_PASSPHRASE
        - BACKUP_REPO
        - DIRECTUS_ADMIN_PASSWORD
        - DIRECTUS_DATABASE_INIT
        - DIRECTUS_DATABASE_PASSWORD
        - DIRECTUS_KEY
        - DIRECTUS_SECRET
        - DIRECTUS_KEYCLOAK_SECRET
        - WEBSITE_DIRECTUS_TOKEN
        - KEYCLOAK_DB_PASSWORD
        - KEYCLOAK_ADMIN_PASSWORD
      when: value == ""
      vars:
        value: "{{ lookup('ansible.builtin.vars', item) }}"

    - name: Init Docker swarm
      community.docker.docker_swarm:
        state: present

    - name: Deploy
      community.docker.docker_stack:
        state: present
        name: "{{ item }}"
        resolve_image: always
        compose:
          - "../{{ item }}/docker-compose.yaml"
      loop: "{{ lookup('ansible.builtin.env', 'SERVICE', default='keycloak,mattermost,nextcloud,roboclic,vaultwarden,website,wiki,clicketing,bookstack,icelan,onlyoffice,directus') | split(',') }}"
      environment:
        MATTERMOST_DATABASE_PASSWORD: "{{ MATTERMOST_DATABASE_PASSWORD }}"
        MATTERMOST_DATABASE_INIT: "{{ MATTERMOST_DATABASE_INIT }}"
        NEXTCLOUD_DATABASE_PASSWORD: "{{ NEXTCLOUD_DATABASE_PASSWORD }}"
        NEXTCLOUD_DATABASE_INIT: "{{ NEXTCLOUD_DATABASE_INIT }}"
        VAULTWARDEN_ADMIN_TOKEN: "{{ VAULTWARDEN_ADMIN_TOKEN }}"
        ROBOCLIC_TOKEN: "{{ ROBOCLIC_TOKEN }}"
        ROBOCLIC_ADMIN_TOKEN: "{{ ROBOCLIC_ADMIN_TOKEN }}"
        ROBOCLIC_DIRECTUS_TOKEN: "{{ ROBOCLIC_DIRECTUS_TOKEN }}"
        WIKI_DATABASE_PASSWORD: "{{ WIKI_DATABASE_PASSWORD }}"
        WIKI_DATABASE_INIT: "{{ WIKI_DATABASE_INIT }}"
        WIKI_SECRET_KEY: "{{ WIKI_SECRET_KEY }}"
        CLICKETING_DATABASE_PASSWORD: "{{ CLICKETING_DATABASE_PASSWORD }}"
        CLICKETING_DATABASE_INIT: "{{ CLICKETING_DATABASE_INIT }}"
        CLICKETING_ADMIN_TOKEN: "{{ CLICKETING_ADMIN_TOKEN }}"
        BOOKSTACK_DATABASE_PASSWORD: "{{ BOOKSTACK_DATABASE_PASSWORD }}"
        BOOKSTACK_DATABASE_INIT: "{{ BOOKSTACK_DATABASE_INIT }}"
        ONLYOFFICE_JWT_SECRET: "{{ ONLYOFFICE_JWT_SECRET }}"
        DIRECTUS_SECRET: "{{ DIRECTUS_SECRET }}"
        DIRECTUS_KEY: "{{ DIRECTUS_KEY }}"
        DIRECTUS_DATABASE_PASSWORD: "{{ DIRECTUS_DATABASE_PASSWORD }}"
        DIRECTUS_ADMIN_PASSWORD: "{{ DIRECTUS_ADMIN_PASSWORD }}"
        DIRECTUS_DATABASE_INIT: "{{ DIRECTUS_DATABASE_INIT }}"
        DIRECTUS_KEYCLOAK_SECRET: "{{ DIRECTUS_KEYCLOAK_SECRET }}"
        SMTP_COMMUNICATION_PASSWORD: "{{ SMTP_COMMUNICATION_PASSWORD }}"
        SMTP_IT_PASSWORD: "{{ SMTP_IT_PASSWORD }}"
        WEBSITE_DIRECTUS_TOKEN: "{{ WEBSITE_DIRECTUS_TOKEN }}"
        KEYCLOAK_DB_PASSWORD: "{{ KEYCLOAK_DB_PASSWORD }}"
        KEYCLOAK_ADMIN_PASSWORD: "{{ KEYCLOAK_ADMIN_PASSWORD }}"

- name: Setup automatic backups with Borg
  hosts: localhost
  connection: local
  become_user: root
  become_method: ansible.builtin.sudo
  become: true
  tasks:
    - name: Install required packages
      ansible.builtin.apt:
        update_cache: true
        package:
          - borgbackup
          - postgresql-client
          - mariadb-client
          - cron

    - name: Init backup repository
      ansible.builtin.command:
        argv:
          - borg
          - init
          - -e
          - none
          - "{{ BACKUP_DIR }}"
      register: repo_init
      changed_when: repo_init.rc == 0
      failed_when:
        - repo_init.rc != 0
        - repo_init.rc != 2

    - name: Launch borgmatic
      ansible.builtin.include_role:
        name: borgbase.ansible_role_borgbackup
      vars:
        borg_repository:
          - "{{ BACKUP_REPO }}"
        borg_encryption_passphrase: "{{ BACKUP_ENCRYPTION_PASSPHRASE }}"
        borgmatic_timer: systemd
        borgmatic_timer_hour: 0
        borgmatic_timer_minute: 0
        borg_source_directories:
          - /var/lib/docker/volumes/roboclic
          - /var/lib/docker/volumes/mattermost_data
          - /var/lib/docker/volumes/nextcloud_nextcloud-app
          - /var/lib/docker/volumes/vaultwarden_vaultwarden
          - /var/lib/docker/volumes/wiki_images
          - /var/lib/docker/volumes/bookstack_app
          - /var/lib/docker/volumes/mattermost_config
          - /var/lib/docker/volumes/mattermost_data
          - /var/lib/docker/volumes/mattermost_logs
          - /var/lib/docker/volumes/mattermost_plugins
          - /var/lib/docker/volumes/mattermost_client-plugins
          - /var/lib/docker/volumes/mattermost_bleve-indexes
          - /var/lib/docker/volumes/onlyoffice_config
          - /var/lib/docker/volumes/onlyoffice_data
          - /var/lib/docker/volumes/onlyoffice_fonts
          - /var/lib/docker/volumes/onlyoffice_lib
          - /var/lib/docker/volumes/onlyoffice_log
          - /var/lib/docker/volumes/onlyoffice_psql
          - /var/lib/docker/volumes/onlyoffice_rabbit
          - /var/lib/docker/volumes/onlyoffice_redis
          - /var/db-dumps
          - /var/secrets.yaml
          - /etc/webhook
        borgmatic_hooks:
          before_backup:
            - echo "`date` - Starting backup."
            - mkdir -p /var/db-dumps
            - MYSQL_PWD={{ NEXTCLOUD_DATABASE_PASSWORD }} mariadb-dump --add-drop-database --host 127.0.0.1 --port 5000 --protocol tcp --user nextcloud --databases nextcloud --result-file /var/db-dumps/nextcloud.sql
            - MYSQL_PWD={{ WIKI_DATABASE_PASSWORD }} mariadb-dump --add-drop-database --host 127.0.0.1 --port 5002 --protocol tcp --user wikiuser --databases my_wiki --result-file /var/db-dumps/my_wiki.sql
            - MYSQL_PWD={{ BOOKSTACK_DATABASE_PASSWORD }} mariadb-dump --add-drop-database --host 127.0.0.1 --port 5004 --protocol tcp --user bookstack --databases bookstackapp --result-file /var/db-dumps/bookstack.sql
            - PGPASSWORD={{ MATTERMOST_DATABASE_PASSWORD }} pg_dump --no-password --clean --if-exists --host 127.0.0.1 --port 5001 --username mattermost --format plain mattermost -f /var/db-dumps/mattermost.sql
            - PGPASSWORD={{ CLICKETING_DATABASE_PASSWORD }} pg_dump --no-password --clean --if-exists --host 127.0.0.1 --port 5003 --username clicketing --format plain clicketing -f /var/db-dumps/clicketing.sql
            - PGPASSWORD={{ DIRECTUS_DATABASE_PASSWORD }} pg_dump --no-password --clean --if-exists --host 127.0.0.1 --port 5005 --username directus_user --format plain directus_data -f /var/db-dumps/directus.sql
            - PGPASSWORD={{ KEYCLOAK_DB_PASSWORD }} pg_dump --no-password --clean --if-exists --host 127.0.0.1 --port 5006 --username keycloak --format plain keycloak -f /var/db-dumps/keycloak.sql
        borg_retention_policy:
          keep_daily: 3
          keep_weekly: 4
          keep_monthly: 6
